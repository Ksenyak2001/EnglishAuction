
FUNCTION_BLOCK count_price	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	rarity : REAL;
	fame : REAL;
	significance : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	D : REAL;
END_VAR

FUZZIFY rarity			
	TERM common := (1, 1) (2.5, 1) (4,0) ;
	TERM scarce := trian 2.5 4 5.5;
	TERM rare := trian 4 5.5 7;
	TERM very_rare := trian 5.5 7 8.5;
	TERM extremely_rare :=(7, 0) (8.5, 1) (10,1) ;
END_FUZZIFY

FUZZIFY fame			
	TERM looser := (1, 1) (2.5, 1) (5,0) ;
	TERM ordinary := trian 2.5 5 7.5;
	TERM superstar := (5, 0) (7.5, 1) (10,1);
END_FUZZIFY

FUZZIFY significance			
	TERM useless := (1, 1) (2.5, 1) (5,0) ;
	TERM unobtrusive := trian 2.5 5 7.5;
	TERM special := (5, 0) (7.5, 1) (10,1);
END_FUZZIFY

DEFUZZIFY D			
	TERM zero := (0,1) (0.4,0);
	TERM one := trian 0 0.4 0.8;
	TERM two := trian 0.4 0.8 1.2;
	TERM three := trian 0.8 1.2 1.6;
	TERM four := trian 1.2 1.6 2;
	TERM five := trian 1.6 2 2.4;
	TERM six := trian 2 2.4 2.8;
	TERM seven := trian 2.4 2.8 3.2;
	TERM eight := trian 2.8 3.2 3.6;
	TERM nine := trian 3.2 3.6 4;
	TERM ten := (3.6,0) (4,1);
	
	METHOD : COG;		
	DEFAULT := -2;		
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF (rarity IS common AND fame IS looser AND significance IS useless) THEN D IS zero;
	RULE 2 : IF (rarity IS common AND (fame IS superstar OR fame IS ordinary) AND significance IS useless)THEN D IS one;
	RULE 3 : IF (rarity IS common AND fame IS looser AND (significance IS special OR significance IS unobtrusive)) THEN D IS one;
	RULE 4 : IF (rarity IS scarce AND (fame IS looser OR fame IS ordinary) AND significance IS unobtrusive) THEN D IS two;
	RULE 5 : IF (rarity IS scarce AND fame IS ordinary AND (significance IS useless OR significance IS unobtrusive)) THEN D IS two;
	RULE 6 : IF (rarity IS rare AND fame IS ordinary AND significance IS unobtrusive) THEN D IS three;
	RULE 7 : IF (rarity IS rare AND (fame IS looser OR fame IS ordinary) AND significance IS special) THEN D IS four;
	RULE 8 : IF (rarity IS rare AND fame IS superstar AND (significance IS useless OR significance IS unobtrusive)) THEN D IS four;
	RULE 9 : IF (rarity IS very_rare AND fame IS ordinary AND significance IS unobtrusive) THEN D IS five;
	RULE 10 : IF (rarity IS very_rare AND fame IS looser AND significance IS special) THEN D IS five;
	RULE 11 : IF (rarity IS very_rare AND fame IS superstar AND significance IS useless) THEN D IS five;
	RULE 12 : IF (rarity IS very_rare AND fame IS ordinary AND significance IS special) THEN D IS six;
	RULE 13 : IF (rarity IS very_rare AND fame IS superstar AND significance IS unobtrusive) THEN D IS six;
	RULE 14 : IF (rarity IS very_rare AND fame IS superstar AND significance IS special) THEN D IS seven;
	RULE 15 : IF (rarity IS extremely_rare AND fame IS looser) THEN D IS eight;
	RULE 16 : IF (rarity IS extremely_rare AND significance IS useless) THEN D IS eight;
	RULE 17 : IF (rarity IS extremely_rare AND fame IS ordinary) THEN D IS nine;
	RULE 18 : IF (rarity IS extremely_rare AND significance IS unobtrusive) THEN D IS nine;
	RULE 19 : IF (rarity IS extremely_rare AND fame IS superstar AND significance IS NOT useless) THEN D IS ten;
	RULE 20 : IF (rarity IS extremely_rare AND significance IS useless AND fame IS NOT looser) THEN D IS ten;
END_RULEBLOCK

END_FUNCTION_BLOCK
