
FUNCTION_BLOCK count_acceptability	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	welfare : REAL;
	fame : REAL;
	dif : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	acceptability : REAL;
END_VAR

FUZZIFY welfare			
	TERM looser := (1, 1) (2.5, 1) (5,0) ;
	TERM ordinary := trian 2.5 5 7.5;
	TERM superstar := (5, 0) (7.5, 1) (10,1);
END_FUZZIFY

FUZZIFY fame			
	TERM looser := (1,1) (2.5, 1) (5,0) ;
	TERM ordinary := trian 2.5 5 7.5;
	TERM superstar := (5, 0) (7.5, 1) (10,1);
END_FUZZIFY

FUZZIFY dif			
	TERM low := (-1,1) (-0.5, 1) (0,0) ;
	TERM avg := trian -0.5 0 0.5;
	TERM high := (0, 0) (0.5, 1) (1,1);
END_FUZZIFY

DEFUZZIFY acceptability		
	TERM zero := (0,1) (1,0);
	TERM one := trian 0 1 2;
	TERM two := trian 1 2 3;
	TERM three := trian 2 3 4;
	TERM four := trian 3 4 5;
	TERM five := trian 4 5 6;
	TERM six := trian 5 6 7;
	TERM seven := trian 6 7 8;
	TERM eight := trian 7 8 9;
	TERM nine := trian 8 9 10;
	TERM ten := (9,0) (10,1);
	
	METHOD : COG;		
	DEFAULT := -2;		
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF (welfare IS looser AND fame IS looser AND dif IS low) THEN acceptability IS zero;
	RULE 2 : IF (welfare IS ordinary AND fame IS looser AND dif IS low) THEN acceptability IS one;
	RULE 3 : IF (welfare IS looser AND fame IS ordinary AND dif IS low) THEN acceptability IS one;
	RULE 4 : IF (welfare IS looser AND fame IS looser AND dif IS avg) THEN  acceptability IS two;
	RULE 5 : IF (welfare IS looser AND fame IS ordinary AND dif IS avg) THEN  acceptability IS three;
	RULE 6 : IF (welfare IS ordinary AND fame IS looser AND dif IS avg) THEN  acceptability IS three;
	RULE 7 : IF (welfare IS ordinary AND fame IS ordinary AND dif IS low) THEN  acceptability IS four;
	RULE 8 : IF (welfare IS superstar AND fame IS looser AND dif IS low) THEN  acceptability IS four;
	RULE 9 : IF (welfare IS looser AND fame IS superstar AND dif IS low) THEN  acceptability IS four;
	RULE 10 : IF (welfare IS looser AND fame IS looser AND dif IS high) THEN  acceptability IS four;
	
	RULE 11 : IF (welfare IS ordinary AND fame IS ordinary AND dif IS avg) THEN  acceptability IS five;
	RULE 12 : IF (welfare IS looser AND fame IS ordinary AND dif IS high) THEN  acceptability IS five;
	RULE 13 : IF (welfare IS looser AND fame IS superstar AND dif IS avg) THEN  acceptability IS five;
	RULE 14 : IF (welfare IS ordinary AND fame IS looser AND dif IS high) THEN  acceptability IS five;
	RULE 15 : IF (welfare IS ordinary AND fame IS superstar AND dif IS low) THEN  acceptability IS five;
	RULE 16 : IF (welfare IS superstar AND fame IS looser AND dif IS avg) THEN  acceptability IS five;
	RULE 17 : IF (welfare IS superstar AND fame IS ordinary AND dif IS low) THEN  acceptability IS five;
	
	RULE 18 : IF (welfare IS superstar AND fame IS looser AND dif IS high) THEN  acceptability IS six;
	RULE 19 : IF (welfare IS superstar AND fame IS superstar AND dif IS low) THEN  acceptability IS six;
	RULE 20 : IF (welfare IS looser AND fame IS superstar AND dif IS high) THEN  acceptability IS six;
	RULE 21 : IF (welfare IS superstar AND fame IS superstar AND dif IS avg) THEN  acceptability IS six;
	RULE 22 : IF (welfare IS ordinary AND fame IS superstar AND dif IS avg) THEN  acceptability IS six;
	RULE 23 : IF (welfare IS ordinary AND fame IS ordinary AND dif IS high) THEN  acceptability IS seven;
	RULE 24 : IF (welfare IS ordinary AND fame IS superstar AND dif IS high) THEN  acceptability IS eight;
	RULE 25 : IF (welfare IS superstar AND fame IS ordinary AND dif IS high) THEN  acceptability IS eight;
	RULE 26 : IF (welfare IS superstar AND fame IS superstar AND dif IS avg) THEN  acceptability IS nine;
	RULE 27 : IF (welfare IS superstar AND fame IS superstar AND dif IS high) THEN  acceptability IS ten;
END_RULEBLOCK

END_FUNCTION_BLOCK
